1 cnmp install sqlite3 --save-dev

2 下载sqlcipher并编译，window参考 
https://github.com/sqlitebrowser/sqlitebrowser/wiki/Win64-setup-%E2%80%94-Compiling-SQLCipher

2 切换到node_modules/sqlite3目录,修改binding.gyp,
参考https://www.cnblogs.com/NKnife/p/10515662.html


3 执行命令：
node-gyp configure --module_name=node_sqlite3 --module_path=../lib/binding/electron-v2.0-win32-x64

4 执行命令：
node-gyp rebuild --target=2.0.4 --arch=x64 --target_platform=win32 --dist-url=https://atom.io/download/electron --module_name=node_sqlite3 --sqlite_libname=sqlcipher --module_path=../lib/binding/electron-v2.0-win32-x64 --runtime=electron

因为window下编译出来的是动态库，然后将libcrypto-1_1-x64.dll和sqlcipher.dll放到node_modules/sqlite3/lib/binding/electron-b2.0-win32-x64目录下。




linux下bind.gyp配置：
{
  "includes": [ "deps/common-sqlite.gypi" ],
  "variables": {
      "sqlite%":"internal",
      "sqlite_libname%":"sqlite3"
  },
  "targets": [
    {
      "target_name": "<(module_name)",
      "include_dirs": ["<!(node -e \"require('nan')\")",
			"/home/cf/Desktop/sqlcipher/tsrc"],
       "libraries": [
               "-lsqlcipher"
            ],
      
      "sources": [
        "src/backup.cc",
        "src/database.cc",
        "src/node_sqlite3.cc",
        "src/statement.cc"
      ]
    },
    {
      "target_name": "action_after_build",
      "type": "none",
      "dependencies": [ "<(module_name)" ],
      "copies": [
          {
            "files": [ "<(PRODUCT_DIR)/<(module_name).node" ],
            "destination": "<(module_path)"
          }
      ]
    }
  ]
}

ubuntu:
sqlcipher版本 v4.4.0
openssl版本：1.1.1g


